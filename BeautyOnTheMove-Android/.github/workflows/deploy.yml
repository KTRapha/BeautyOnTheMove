name: Deploy to AWS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  S3_BUCKET: botm-deploy-665802315326-us-east-1
  CODEPLOY_APPLICATION: BeautyOnTheMoveApp
  CODEPLOY_DEPLOYMENT_GROUP: BeautyOnTheMoveDeploymentGroupWithoutBoundary

permissions:
  id-token: write
  contents: read

jobs:
  test-aws-connection:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHubActions
          aws-region: us-east-1

      - name: Test AWS connection
        run: |
          echo "Testing AWS connection..."
          aws sts get-caller-identity
          echo "AWS connection successful!"

  build-and-deploy:
    needs: test-aws-connection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHubActions
          aws-region: us-east-1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd ..
          echo "Installing npm dependencies..."
          npm install || echo "npm install failed, continuing..."

      - name: Build Android app
        run: |
          cd ..
          echo "Building Android app..."
          # Try different build approaches
          if command -v npx >/dev/null 2>&1; then
            echo "Using npx react-native..."
            npx react-native build-android --mode=release || echo "npx build failed"
          else
            echo "npx not available, trying direct gradle..."
            cd android && ./gradlew assembleRelease || echo "gradle build failed"
          fi
          
          echo "Build completed. Checking for APK files..."
          find . -name "*.apk" -type f || echo "No APK files found"

      - name: Debug - Check current directory and files
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "AWS scripts directory:"
          ls -la aws/scripts/ || echo "aws/scripts/ not found"

      - name: Create deployment package
        run: |
          echo "Creating deployment directory..."
          mkdir -p deployment
          
          echo "Copying APK files..."
          cp -r ../android/app/build/outputs/apk/release/* deployment/ || echo "No APK files found"
          
          echo "Copying appspec.yml..."
          cp appspec.yml deployment/
          
          echo "Copying scripts..."
          cp -r aws/scripts deployment/
          
          echo "Deployment directory contents:"
          ls -la deployment/
          echo "Scripts directory contents:"
          ls -la deployment/scripts/

      - name: Fix script permissions and line endings
        run: |
          cd deployment
          echo "Current directory: $(pwd)"
          echo "Installing dos2unix for line ending conversion..."
          sudo apt-get update
          sudo apt-get install -y dos2unix
          
          echo "Fixing script permissions and line endings..."
          
          # Check if scripts exist
          if [ ! -d "scripts" ]; then
            echo "ERROR: scripts directory not found!"
            exit 1
          fi
          
          # List scripts before processing
          echo "Scripts before processing:"
          ls -la scripts/
          
          # Convert Windows line endings to Unix (CRLF to LF)
          echo "Using dos2unix to fix line endings..."
          dos2unix scripts/*.sh
          
          # Make scripts executable
          echo "Making scripts executable..."
          chmod +x scripts/*.sh
          
          # Verify scripts are executable and have correct line endings
          echo "Verifying scripts..."
          ls -la scripts/
          echo "Checking script contents (first few lines):"
          for script in scripts/*.sh; do
            echo "=== $script ==="
            head -5 "$script"
            echo "=== End of $script ==="
          done
          
          # Test script execution
          echo "Testing script execution..."
          for script in scripts/*.sh; do
            echo "Testing $script..."
            bash -n "$script" && echo "✓ $script syntax OK" || echo "✗ $script syntax error"
          done

      - name: Debug - Check final deployment package
        run: |
          cd deployment
          echo "Final deployment package contents:"
          find . -type f -exec ls -la {} \;
          echo "Script permissions:"
          ls -la scripts/

      - name: Upload to S3
        run: |
          aws s3 cp deployment/ s3://ktrapha-beautyonmove-android-deployments/ --recursive

      - name: Deploy to CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name BeautyOnTheMoveApp \
            --deployment-group-name BeautyOnTheMoveDeploymentGroupWithoutBoundary \
            --s3-location bucket=ktrapha-beautyonmove-android-deployments,key=appspec.yml,bundleType=YAML \
            --deployment-config-name CodeDeployDefault.OneAtATime

      - name: Wait for deployment
        run: |
          echo "Waiting for deployment to complete..."
          # This is a simplified wait - in production you'd want to check deployment status
          sleep 30 